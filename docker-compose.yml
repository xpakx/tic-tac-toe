version: '3.3'

services:
  main:
    build: 
      context: ./main/
      dockerfile: Dockerfile
    container_name: main
    depends_on:
      - dbttt
      - rabbitmq
    expose:
      - 8080
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://dbttt:5432/ttt_dev
      - SPRING_DATASOURCE_USERNAME=admin
      - SPRING_DATASOURCE_PASSWORD=password
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_RABBITMQ_HOST=rabbitmq
  dbttt:
    image: 'postgres:13.1-alpine'
    container_name: dbttt
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=ttt_dev
    expose:
      - 5432
  game:
    build: 
      context: ./game
      dockerfile: Dockerfile
    container_name: game
    depends_on:
      - cache
      - rabbitmq
    expose:
      - 8081
    environment:
      - SPRING_RABBITMQ_HOST=rabbitmq
      - SPRING_DATA_REDIS_HOST=cache
      - SPRING_DATA_REDIS_PASSWORD=password
  gateway:
    build: 
      context: ./gateway/
      dockerfile: Dockerfile
    container_name: gateway
    ports:
      - "8000:8000"
    depends_on: 
      - game
      - main
    environment:
      SPRING_PROFILES_ACTIVE: path
      SPRING_CLOUD_GATEWAY_ROUTES[0]_URI: http://main:8080
      SPRING_CLOUD_GATEWAY_ROUTES[0]_ID: 'main'
      SPRING_CLOUD_GATEWAY_ROUTES[0]_PREDICATES[0]: 'Path=/authenticate,/register,/game/**'
      SPRING_CLOUD_GATEWAY_ROUTES[1]_URI: http://game:8081
      SPRING_CLOUD_GATEWAY_ROUTES[1]_ID: 'game'
      SPRING_CLOUD_GATEWAY_ROUTES[1]_PREDICATES[0]: 'Path=/app/**,/topic/**,/play/**'
      SPRING_CLOUD_GATEWAY_GLOBALCORS_CORS-CONFIGURATIONS['[/**]']_ALLOWEDORIGINS: http://localhost:8001
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: 'rabbitmq'
    ports:
        - 5672:5672
        - 15672:15672
  cache:
    container_name: 'cache'
    image: redis:6.2-alpine
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning --requirepass password
    volumes: 
      - cache:/data
  frontend:
    container_name: frontend
    build: 
      context: ./frontend/
      dockerfile: Dockerfile
    ports:
      - "8001:80"
volumes:
  cache:
    driver: local
